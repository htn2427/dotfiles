return {
	comment = {
		fix = " ",
		todo = " ",
		hack = " ",
		warn = " ",
		perf = " ",
		note = " ",
		test = "󰙨 ",
	},
	diagnostics = {
		error = " ",
		hint = " ",
		information = " ",
		other = " ",
		warning = " ",
	},
	neotree = {
		folder = {
			folder_closed = " ",
			folder_open = " ",
			folder_empty = " ",
			folder_empty_open = " ",
		},
	},
	git = {
		added = " ",
		modified = " ",
		deleted = " ",
		renamed = " ",
		-- Status type
		untracked = " ",
		ignored = " ",
		unstaged = " ",
		staged = " ",
		conflict = " ",
	},
	dap = {
		breakpoint = " ",
		breakpoint_condition = " ",
		log_point = " ",
		stopped = " ",
		breakpoint_rejected = " ",
		pause = " ",
		play = " ",
		step_into = " ",
		step_over = " ",
		step_out = " ",
		step_back = " ",
		run_last = " ",
		terminate = " ",
	},
	lazy = {
		cmd = " ",
		config = "",
		event = "",
		ft = " ",
		init = " ",
		import = " ",
		keys = " ",
		lazy = "󰒲 ",
		loaded = "󱄲",
		not_loaded = "󱄯",
		plugin = " ",
		runtime = " ",
		source = " ",
		start = "",
		task = "",
		list = {
			"󱄰",
			"➜",
			"★",
			"‒",
		},
	},
	mason = {
		package_installed = "󱄲",
		package_pending = "󱄰",
		package_uninstalled = "󱄯",
	},
	trouble = {
		indent = {
			top = "┊ ",
			middle = "├╴",
			last = "└╴",
			fold_open = " ",
			fold_closed = " ",
			ws = "  ",
		},
		kinds = {
			Array = " ",
			Boolean = "󰨙 ",
			Class = " ",
			Constant = "󰏿 ",
			Constructor = " ",
			Enum = " ",
			EnumMember = " ",
			Event = " ",
			Field = " ",
			File = " ",
			Function = "󰊕 ",
			Interface = " ",
			Key = " ",
			Method = "󰊕 ",
			Module = " ",
			Namespace = "󰦮 ",
			Null = " ",
			Number = "󰎠 ",
			Object = " ",
			Operator = " ",
			Package = " ",
			Property = " ",
			String = " ",
			Struct = "󰆼 ",
			TypeParameter = " ",
			Variable = "󰀫 ",
		},
	},
	borders = {
		dashed = { "┄", "┊", "┄", "┊", "╭", "╮", "╯", "╰" },
		double = { "═", "║", "═", "║", "╔", "╗", "╝", "╚" },
		single = { "─", "│", "─", "│", "╭", "╮", "╯", "╰" },
		blocks = { "▀", "▐", "▄", "▌", "▛", "▜", "▟", "▙" },
		blocky = { "▀", "▐", "▄", "▌", "▄", "▄", "▓", "▀" },
	},
	telescope = {
		prompt = { "─", "│", "─", "│", "╭", "╮", "╯", "╰" },
		results = { "─", " ", "─", "│", "╭", "─", "─", "╰" },
		preview = { "─", "│", "─", "│", "─", "╮", "╯", "╰" },
	},
}
